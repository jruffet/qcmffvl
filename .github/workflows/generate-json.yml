name: Generate JSON from CSV using latest mcq tag

permissions:
  contents: write

on:
  push:
    paths:
      - 'data/csv/qcm_ffvl.csv'
  workflow_dispatch:

jobs:
  generate-json:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0 # fetch all tags and history

      - name: Extract latest mcq-* tag
        id: get_version
        run: |
          set -e
          latest=$(git tag --list 'mcq-*' --sort=-creatordate | head -n1)
          if [ -z "$latest" ]; then
            echo "No mcq-* tags found"
            exit 1
          fi
          version=${latest#mcq-}
          echo "version=$version" >> "$GITHUB_OUTPUT"

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.x'

      - name: Run script with extracted version
        run: python ./helpers/csvref2json data/csv/qcm_ffvl.csv web/json/qcm_ffvl.json ${{ steps.get_version.outputs.version }}

      - name: Commit and push generated JSON
        run: |
          git config --global user.name "github-actions[bot]"
          git config --global user.email "github-actions[bot]@users.noreply.github.com"
          git add web/json/qcm_ffvl.json
          if ! git diff --cached --quiet; then
            git commit -m "chore: regenerate JSON for version ${{ steps.get_version.outputs.version }}"
            git push origin master
          else
            echo "No changes to commit"
          fi

      - name: Trigger deploy workflow via repository dispatch
        uses: actions/github-script@v6
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            await github.rest.repos.createDispatchEvent({
              owner: context.repo.owner,
              repo: context.repo.repo,
              event_type: 'deploy-web',
              client_payload: {}
            })
